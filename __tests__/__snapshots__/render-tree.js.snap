// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render nix expression a single module 1`] = `
"# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

self: super: {
  \\"A@1.1.1\\" = self.buildNodeModule {
    id = { scope = \\"\\"; name = \\"A\\"; };
    version = \\"1.1.1\\";
    src = self.fetchurl {  
      url = \\"https://registry.yarnpkg.com/A/A.tgz\\"; 
      sha1 = \\"sha1\\"; 
    };
  };
}
"
`;

exports[`Render nix expression ambiguous url: no extention 1`] = `
"# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

self: super: {
  \\"A@1.1.1\\" = self.buildNodeModule {
    id = { scope = \\"\\"; name = \\"A\\"; };
    version = \\"1.1.1\\";
    src = self.fetchurl { 
      name = abort ''
        
        
        Failed to recognise the type of the archive of the \`A@1.1.1\` package served from
        \`https://registry.yarnpkg.com/A/A\`

        Override \`\\"A@1.1.1\\".src.name\` attribute in order to provide a file name extension
        to let Nix recognise the type of the archive and unpack it appropriately. For example:

          self: super: {
            \\"A@1.1.1\\" = super.\\"A@1.1.1\\".override (x: {
              src = x.src.override {
                # Let Nix to recognise the type of archive so it unpacks it appropriately
                name = \\"A.tgz\\";
              };
            });
          }
        
      ''; 
      url = \\"https://registry.yarnpkg.com/A/A\\"; 
      sha1 = \\"sha1\\"; 
    };
  };
}
"
`;

exports[`Render nix expression hosted modules 1`] = `
"# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

self: super: {
  \\"A@1.1.1\\" = self.buildNodeModule {
    id = { scope = \\"\\"; name = \\"A\\"; };
    version = \\"1.1.1\\";
    src = self.fetchurl {  
      url = \\"https://registry.yarnpkg.com/A/A.tgz\\"; 
      sha1 = \\"sha1\\"; 
    };
    modules = [
      self.\\"A@1.1.1+B@2.2.2\\"
    ];
  };
  \\"A@1.1.1+A@1.1.1\\" =
    let id = { scope = \\"\\"; name = \\"A\\"; };
    in { inherit id; host = id; };
  \\"A@1.1.1+B@2.2.2\\" = 
    self.\\"B@2.2.2\\".override {
      host = { scope = \\"\\"; name = \\"A\\"; };
      modules = [
        self.\\"A@1.1.1+A@1.1.1\\"
      ];
    };
  \\"B@2.2.2\\" = self.buildNodeModule {
    id = { scope = \\"\\"; name = \\"B\\"; };
    version = \\"2.2.2\\";
    src = self.fetchurl {  
      url = \\"https://registry.yarnpkg.com/B/B.tgz\\"; 
      sha1 = \\"sha1\\"; 
    };
    modules = [
      self.\\"A@1.1.1\\"
    ];
  };
}
"
`;

exports[`Render nix expression missing sha1 1`] = `
"# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

self: super: {
  \\"A@1.1.1\\" = self.buildNodeModule {
    id = { scope = \\"\\"; name = \\"A\\"; };
    version = \\"1.1.1\\";
    src = self.fetchurl {  
      url = \\"https://registry.yarnpkg.com/A/A.tgz\\"; 
      sha256 = abort ''
        
        
        Failed to infer \`sha256\` hash of the \`A@1.1.1\` package source from
        \`https://registry.yarnpkg.com/A/A.tgz\`.

        Override \`\\"A@1.1.1\\".src.sha256\` attribute in order to provide this missing piece to Nix.
        For example:
          
          self: super: {
            \\"A@1.1.1\\" = super.\\"A@1.1.1\\".override (x: {
              # The sha256 value is obtained via
              #   nix-prefetch-url https://registry.yarnpkg.com/A/A.tgz
              src = x.src.override { 
                sha256 = \\"<sha256>\\";
              };
            });
          }

      ''; 
    };
  };
}
"
`;
